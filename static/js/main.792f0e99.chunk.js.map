{"version":3,"sources":["Context.js","componenets/contacts/Contact.js","componenets/contacts/Contacts.js","componenets/layout/Header.js","componenets/layout/TextInputGroup.js","componenets/contacts/AddContact.js","componenets/contacts/EditContact.js","pages/About.js","pages/NotFound.js","componenets/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","paddingLeft","float","color","bind","to","marginRight","Contacts","Fragment","key","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaulProops","AddContact","errors","onSubmit","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","Test","title","body","fetch","then","response","json","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"2TAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAO,2BACFF,GADL,IAEEG,SAAUH,EAAMG,SAASC,QACvB,SAACC,GAAD,OAAaA,EAAQC,KAAOL,EAAOM,aAGzC,IAAK,cACH,OAAO,2BACFP,GADL,IAEEG,SAAS,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,aAExC,IAAK,iBACH,OAAO,2BACFH,GADL,IAEEG,SAAUH,EAAMG,SAASK,KAAI,SAACH,GAAD,OAC3BA,EAAQC,KAAOL,EAAOM,QAAQD,GACzBD,EAAUJ,EAAOM,QAClBF,OAGV,QACE,OAAOL,IAIAS,EAAb,4MACET,MAAQ,CACNG,SAAU,GACVO,SAAU,SAACT,GAAD,OAAY,EAAKU,UAAS,SAACX,GAAD,OAAWD,EAAQC,EAAOC,QAHlE,kMAOsBW,IAAMC,IAAI,8CAPhC,OAOUC,EAPV,OASIC,KAAKJ,SAAS,CAAER,SAAUW,EAAIE,OATlC,qIAaI,OACE,kBAACpB,EAAQa,SAAT,CAAkBQ,MAAOF,KAAKf,OAC3Be,KAAKG,MAAMC,cAfpB,GAA8BC,aAqBjBC,EAAWzB,EAAQyB,SCwBjBC,E,4MAvEbtB,MAAQ,CACNuB,iBAAiB,G,EAGnBC,YAAc,SAACC,GACb,EAAKd,SAAS,CAAEY,iBAAkB,EAAKvB,MAAMuB,mB,EAG/CG,c,uCAAgB,WAAOpB,EAAII,GAAX,SAAAiB,EAAA,+EAENf,IAAMgB,OAAN,qDAA2DtB,IAFrD,OAGZI,EAAS,CAAER,KAAM,iBAAkBK,QAASD,IAHhC,+CAKZI,EAAS,CAAER,KAAM,iBAAkBK,QAASD,IALhC,wD,+GASN,IAAD,SAC4BS,KAAKG,MAAMb,QAAtCC,EADD,EACCA,GAAIuB,EADL,EACKA,KAAMC,EADX,EACWA,MAAOC,EADlB,EACkBA,MACjBR,EAAoBR,KAAKf,MAAzBuB,gBACR,OACE,kBAACF,EAAD,MACG,SAACJ,GAAW,IACHP,EAAaO,EAAbP,SACR,OACE,yBAAKsB,UAAU,uBACb,4BACGH,EACD,uBACEI,QAAS,EAAKT,YACdQ,UAAU,mBACVE,MAAO,CACLC,OAAQ,UACRC,YAAa,SAGjB,uBACEJ,UAAU,eACVE,MAAO,CAAEC,OAAQ,UAAWE,MAAO,QAASC,MAAO,OACnDL,QAAS,EAAKP,cAAca,KAAK,EAAMjC,EAAII,KAE7C,kBAAC,IAAD,CAAM8B,GAAE,uBAAkBlC,IACxB,uBACE0B,UAAU,oBACVE,MAAO,CACLC,OAAQ,UACRE,MAAO,QACPC,MAAO,QACPG,YAAa,YAKpBlB,EACC,wBAAIS,UAAU,cACZ,wBAAIA,UAAU,mBAAd,UAAwCF,EAAxC,KACA,wBAAIE,UAAU,mBAAd,UAAwCD,EAAxC,MAEA,a,GA3DIX,aCmBPsB,E,uKAnBX,OACE,kBAACrB,EAAD,MACG,SAACJ,GAAW,IACHd,EAAac,EAAbd,SACR,OACE,kBAAC,IAAMwC,SAAP,KACE,wBAAIX,UAAU,kBACZ,0BAAMA,UAAU,eAAhB,WADF,SAGC7B,EAASK,KAAI,SAACH,GAAD,OACZ,kBAAC,EAAD,CAASuC,IAAKvC,EAAQC,GAAID,QAASA,e,GAZ5Be,aCAjByB,EAAS,SAAC3B,GAAW,IACjB4B,EAAa5B,EAAb4B,SACR,OACE,yBAAKd,UAAU,2DACb,yBAAKA,UAAU,aACb,uBAAGe,KAAK,IAAIf,UAAU,gBACnBc,GAEH,6BACE,wBAAId,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMQ,GAAG,IAAIR,UAAU,YACrB,uBAAGA,UAAU,gBADf,SAKF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMQ,GAAG,eAAeR,UAAU,YAChC,uBAAGA,UAAU,gBADf,QAKF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMQ,GAAG,SAASR,UAAU,YAC1B,uBAAGA,UAAU,oBADf,eAYda,EAAOG,aAAe,CACpBF,SAAU,UAOGD,Q,yBC3Cf,SAASI,EAAT,GAQI,IAPFC,EAOC,EAPDA,MACArB,EAMC,EANDA,KACAZ,EAKC,EALDA,MACAkC,EAIC,EAJDA,YACAjD,EAGC,EAHDA,KACAkD,EAEC,EAFDA,SACAC,EACC,EADDA,MAEA,OACE,yBAAKrB,UAAU,cACb,2BAAOsB,QAASzB,GAAOqB,GACvB,2BACEhD,KAAMA,EACN2B,KAAMA,EACNZ,MAAOA,EACPe,UAAWuB,IAAW,+BAAgC,CACpD,aAAcF,IAEhBF,YAAaA,EACbC,SAAUA,IAEXC,GAAS,yBAAKrB,UAAU,qBAAqBqB,IAepDJ,EAAeO,aAAe,CAC5BtD,KAAM,QAGO+C,QCmEAQ,E,4MA1GbzD,MAAQ,CACN6B,KAAM,GACNC,MAAO,GACPC,MAAO,GACP2B,OAAQ,I,EAGVC,S,uCAAW,WAAOjD,EAAUe,GAAjB,yBAAAE,EAAA,yDACTF,EAAEmC,iBADO,EAGsB,EAAK5D,MAA5B6B,EAHC,EAGDA,KAAMC,EAHL,EAGKA,MAAOC,EAHZ,EAGYA,MAGR,KAATF,EANK,uBAOP,EAAKlB,SAAS,CAAE+C,OAAQ,CAAE7B,KAAM,sBAPzB,6BAWK,KAAVC,EAXK,uBAYP,EAAKnB,SAAS,CAAE+C,OAAQ,CAAE5B,MAAO,uBAZ1B,6BAgBK,KAAVC,EAhBK,wBAiBP,EAAKpB,SAAS,CAAE+C,OAAQ,CAAE3B,MAAO,uBAjB1B,kCAqBH8B,EAAa,CACjBhC,OACAC,QACAC,SAxBO,UA2BSnB,IAAMkD,KACtB,6CACAD,GA7BO,QA2BH/C,EA3BG,OAgCTJ,EAAS,CAAER,KAAM,cAAeK,QAASO,EAAIE,OAG7C,EAAKL,SAAS,CACZkB,KAAM,GACNC,MAAO,GACPC,MAAO,GACP2B,OAAQ,KAGV,EAAKxC,MAAM6C,QAAQC,KAAK,KA1Cf,4C,0DA6CXZ,SAAW,SAAC3B,GAAD,OAAO,EAAKd,SAAL,eAAiBc,EAAEwC,OAAOpC,KAAOJ,EAAEwC,OAAOhD,S,uDAElD,IAAD,SACgCF,KAAKf,MAApC6B,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MAAO2B,EADrB,EACqBA,OAE5B,OACE,kBAACrC,EAAD,MACG,SAACJ,GAAW,IACHP,EAAaO,EAAbP,SACR,OACE,yBAAKsB,UAAU,aACb,yBAAKA,UAAU,eAAf,eACA,yBAAKA,UAAU,aACb,0BAAM2B,SAAU,EAAKA,SAASpB,KAAK,EAAM7B,IACvC,kBAAC,EAAD,CACEwC,MAAM,OACNrB,KAAK,OACLsB,YAAY,aACZlC,MAAOY,EACPuB,SAAU,EAAKA,SACfC,MAAOK,EAAO7B,OAEhB,kBAAC,EAAD,CACEqB,MAAM,QACNrB,KAAK,QACL3B,KAAK,QACLiD,YAAY,cACZlC,MAAOa,EACPsB,SAAU,EAAKA,SACfC,MAAOK,EAAO5B,QAEhB,kBAAC,EAAD,CACEoB,MAAM,QACNrB,KAAK,QACLsB,YAAY,cACZlC,MAAOc,EACPqB,SAAU,EAAKA,SACfC,MAAOK,EAAO3B,QAEhB,2BACE7B,KAAK,SACLe,MAAM,cACNe,UAAU,sC,GA/FLZ,aC4HV8C,E,4MA3HblE,MAAQ,CACN6B,KAAM,GACNC,MAAO,GACPC,MAAO,GACP2B,OAAQ,I,EAkBVC,S,uCAAW,WAAOjD,EAAUe,GAAjB,2BAAAE,EAAA,yDACTF,EAAEmC,iBADO,EAGsB,EAAK5D,MAA5B6B,EAHC,EAGDA,KAAMC,EAHL,EAGKA,MAAOC,EAHZ,EAGYA,MAGR,KAATF,EANK,uBAOP,EAAKlB,SAAS,CAAE+C,OAAQ,CAAE7B,KAAM,sBAPzB,6BAWK,KAAVC,EAXK,uBAYP,EAAKnB,SAAS,CAAE+C,OAAQ,CAAE5B,MAAO,uBAZ1B,6BAgBK,KAAVC,EAhBK,wBAiBP,EAAKpB,SAAS,CAAE+C,OAAQ,CAAE3B,MAAO,uBAjB1B,kCAqBHoC,EAAa,CACjBtC,OACAC,QACAC,SAGMzB,EAAO,EAAKY,MAAMkD,MAAMC,OAAxB/D,GA3BC,UA6BSM,IAAM0D,IAAN,qDAC8BhE,GAC9C6D,GA/BO,QA6BHrD,EA7BG,OAkCTJ,EAAS,CAAER,KAAM,iBAAkBK,QAASO,EAAIE,OAGhD,EAAKL,SAAS,CACZkB,KAAM,GACNC,MAAO,GACPC,MAAO,GACP2B,OAAQ,KAGV,EAAKxC,MAAM6C,QAAQC,KAAK,KA5Cf,4C,0DA+CXZ,SAAW,SAAC3B,GAAD,OAAO,EAAKd,SAAL,eAAiBc,EAAEwC,OAAOpC,KAAOJ,EAAEwC,OAAOhD,S,6LA7DlDX,EAAOS,KAAKG,MAAMkD,MAAMC,OAAxB/D,G,SACUM,IAAMC,IAAN,qDAC8BP,I,OAD1CQ,E,OAIAT,EAAUS,EAAIE,KAEpBD,KAAKJ,SAAS,CACZkB,KAAMxB,EAAQwB,KACdC,MAAOzB,EAAQyB,MACfC,MAAO1B,EAAQ0B,Q,qIAqDT,IAAD,SACgChB,KAAKf,MAApC6B,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MAAO2B,EADrB,EACqBA,OAE5B,OACE,kBAACrC,EAAD,MACG,SAACJ,GAAW,IACHP,EAAaO,EAAbP,SACR,OACE,yBAAKsB,UAAU,aACb,yBAAKA,UAAU,eAAf,gBACA,yBAAKA,UAAU,aACb,0BAAM2B,SAAU,EAAKA,SAASpB,KAAK,EAAM7B,IACvC,kBAAC,EAAD,CACEwC,MAAM,OACNrB,KAAK,OACLsB,YAAY,aACZlC,MAAOY,EACPuB,SAAU,EAAKA,SACfC,MAAOK,EAAO7B,OAEhB,kBAAC,EAAD,CACEqB,MAAM,QACNrB,KAAK,QACL3B,KAAK,QACLiD,YAAY,cACZlC,MAAOa,EACPsB,SAAU,EAAKA,SACfC,MAAOK,EAAO5B,QAEhB,kBAAC,EAAD,CACEoB,MAAM,QACNrB,KAAK,QACLsB,YAAY,cACZlC,MAAOc,EACPqB,SAAU,EAAKA,SACfC,MAAOK,EAAO3B,QAEhB,2BACE7B,KAAK,SACLe,MAAM,iBACNe,UAAU,sC,GAhHJZ,aCHX,aACb,OACE,6BACE,wBAAIY,UAAU,aAAd,yBACA,uBAAGA,UAAU,QAAb,iCACA,yBAAKA,UAAU,kBAAf,mBCLS,G,YAAA,WACb,OACE,6BACE,wBAAIA,UAAU,aACZ,0BAAMA,UAAU,eAAhB,OADF,mBAGA,uBAAGA,UAAU,QAAb,yDCsCSuC,E,4MA3CbvE,MAAQ,CACNwE,MAAO,GACPC,KAAM,I,kEAGa,IAAD,OAClBC,MAAM,gDACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OACJ,EAAKlE,SAAS,CACZ6D,MAAOK,EAAKL,MACZC,KAAMI,EAAKJ,Y,+BAqBT,IAAD,EACiB1D,KAAKf,MAArBwE,EADD,EACCA,MAAOC,EADR,EACQA,KACf,OACE,6BACE,4BAAKD,GACL,2BAAIC,Q,GAtCOrD,aCkCJ0D,MAtBf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,yBAAK9C,UAAU,OACb,kBAAC,EAAD,CAAQc,SAAS,oBACjB,yBAAKd,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,IAAIC,UAAWvC,IACjC,kBAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,eAAeC,UAAWxB,IAC5C,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,oBAAoBC,UAAWf,IACjD,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,QAAQC,UAAWV,IACrC,kBAAC,IAAD,CAAOU,UAAWE,UCfZC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASnB,MACvB,2DCbNoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpB,MAAK,SAAAqB,GACJA,EAAaC,gBAEdC,OAAM,SAAA7C,GACL8C,QAAQ9C,MAAMA,EAAM+C,c","file":"static/js/main.792f0e99.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Consumer } from \"../../Context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onShowClick = (e) => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    paddingLeft: \"8px\",\r\n                  }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\",\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email} </li>\r\n                  <li className=\"list-group-item\">Phone: {phone} </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../Context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i>\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"></i>\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"></i>\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nfunction TextInputGroup({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"'invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nTextInputGroup.defaulProops = {\r\n  type: \"text\",\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <div className=\"text-secondary\">Version 1.0.0</div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, the page you are looking for does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\",\r\n  };\r\n  //Lifecycle methods\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then((response) => response.json())\r\n      .then((json) =>\r\n        this.setState({\r\n          title: json.title,\r\n          body: json.body,\r\n        })\r\n      );\r\n  } // Triggers action as soon as the component fires up\r\n  //   componentWillMount() {\r\n  //     console.log(\"componentWillmount\");\r\n  //   } //Triggers actions before the components fires up\r\n  //   componentDidUpdate() {\r\n  //     console.log(\"componentDidUpdate\");\r\n  //   } //Triggers actions after the component updates or changes\r\n\r\n  //   componentWillReceiveProps(nextProps, nextState) {\r\n  //     console.log(\"ComponentWillReceiveProps\");\r\n  //   } //Triggers actions when the component receives new properties. Often used with redux. The new component will be received in the nextProps argument\r\n\r\n  //   static getDerivedStateFromProps(nextProps, prevState) {\r\n  //     return null;\r\n  //   }\r\n  //   getSnapshotBeforeUpdate(prevProps, prevState) {\r\n  //     console.log(\"getSnapshotBeforeUpdate..\");\r\n  //   }\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Contacts from \"./componenets/contacts/Contacts\";\r\nimport Header from \"./componenets/layout/Header\";\r\nimport AddContact from \"./componenets/contacts/AddContact\";\r\nimport EditContact from \"./componenets/contacts/EditContact\";\r\nimport About from \"./pages/About\";\r\nimport { Provider } from \"./Context\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport NotFound from \"./pages/NotFound\";\r\nimport Test from \"./componenets/test/Test\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header branding=\"Contact Manager\" />\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Contacts} />\r\n              <Route exact path=\"/contact/add\" component={AddContact} />\r\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\r\n              <Route exact path=\"/about\" component={About} />\r\n              <Route exact path=\"/Test\" component={Test} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}